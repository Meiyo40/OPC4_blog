/*
SQLyog Community v13.1.1 (64 bit)
MySQL - 5.7.24-log : Database - OPC4_BLOG
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`OPC4_BLOG` /*!40100 DEFAULT CHARACTER SET latin1 */;

USE `OPC4_BLOG`;

/*Table structure for table `opc_blog_comment` */

DROP TABLE IF EXISTS `opc_blog_comment`;

CREATE TABLE `opc_blog_comment` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'id of the comment',
  `post_id` int(10) unsigned NOT NULL COMMENT 'id of the parent post',
  `comment_parent` int(10) DEFAULT NULL,
  `depth` int(10) DEFAULT NULL,
  `author` varchar(48) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'name of the author',
  `comment` text COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'content of the comment',
  `comment_date` datetime DEFAULT NULL COMMENT 'date of the comment',
  `report` int(10) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=57 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

/*Data for the table `opc_blog_comment` */

insert  into `opc_blog_comment`(`id`,`post_id`,`comment_parent`,`depth`,`author`,`comment`,`comment_date`,`report`) values 
(1,61,NULL,0,'Meiyo','Vivamus leo erat, faucibus quis lacus a, tincidunt vulputate justo. Duis a venenatis justo. Sed non laoreet turpis, sollicitudin pretium dolor. Aliquam hendrerit dignissim commodo. Fusce eget hendrerit justo. Aenean vel urna at nisl accumsan tempor. Donec efficitur enim sit amet nisl vestibulum, ut scelerisque mi sollicitudin. Morbi interdum venenatis arcu, imperdiet auctor diam maximus ut. Nunc ut libero in ex efficitur scelerisque pretium eget odio. Sed sagittis sapien eget molestie finibus.','2019-04-10 15:19:57',0),
(14,61,1,1,'Socrate','Aliquam hendrerit dignissim commodo. Fusce eget hendrerit justo. Aenean vel urna at nisl accumsan tempor. Donec efficitur enim sit amet nisl vestibulum, ut scelerisque mi sollicitudin. Morbi interdum venenatis arcu, imperdiet auctor diam maximus ut.&amp;nbsp;','2019-05-07 02:19:58',0),
(28,61,NULL,0,'Admin','Premier commentaire sur l\'article, faut fÃªter Ã§a !','2019-05-07 03:55:13',0),
(33,61,14,2,'testdoublecom','Testdudoublecom','2019-05-07 05:25:25',2),
(34,61,14,1,'test','test','2019-05-07 06:17:24',1),
(35,61,34,1,'test','test','2019-05-07 06:17:45',0),
(36,61,14,2,'Dupont','&lt;div&gt;&lt;div&gt;depth&lt;/div&gt;&lt;/div&gt;','2019-05-07 06:22:40',0),
(37,61,34,2,'test','test','2019-05-07 06:23:00',0),
(38,61,14,2,'qsd','QSD','2019-05-07 06:23:24',0),
(39,61,36,2,'QSD','QSD','2019-05-07 06:23:37',0),
(40,61,34,2,'TARAR','TARAR','2019-05-07 06:24:20',0),
(41,61,40,2,'TARAR2','TARAR2','2019-05-07 06:24:31',0),
(42,61,35,2,'TARAR3','TARAR3','2019-05-07 06:30:20',0),
(43,61,42,2,'TARAR4','TARAR4','2019-05-07 06:30:28',0),
(44,61,42,2,'TARAR5','TARAR5','2019-05-07 06:43:05',0),
(45,61,NULL,0,'Chouba','First comment','2019-05-08 05:08:03',0),
(46,61,45,1,'test','test','2019-05-08 05:08:34',0),
(47,61,NULL,0,'Second Comment','Test','2019-05-08 05:08:49',0),
(48,61,NULL,0,'Second Comment','Test','2019-05-08 05:09:29',0),
(49,61,NULL,0,'premier com','test ajout com','2019-05-08 05:40:06',0),
(50,61,47,1,'CinquiemeCom','Testcompteurcom','2019-05-08 05:40:28',0),
(51,61,NULL,0,'test','test','2019-05-14 01:01:55',0),
(52,61,NULL,0,'NapolÃ©on','Nulla a efficitur enim. Sed tincidunt leo malesuada odio auctor, et placerat mi hendrerit. Donec porta ullamcorper mi sit amet volutpat. Mauris ipsum ipsum, fermentum hendrerit turpis quis, fermentum fringilla libero.','2019-05-14 10:23:37',4),
(53,61,52,1,'qsdqsd','qsdqd','2019-05-17 10:33:39',0),
(54,61,53,2,'qsdqsd','qsdqsd','2019-05-17 10:36:22',0),
(55,61,54,2,'qsdqsd','qsdqsd','2019-05-17 10:36:45',0),
(56,61,52,1,'qsdqsd','sdqsd','2019-05-17 10:37:52',0);

/*Table structure for table `opc_blog_posts` */

DROP TABLE IF EXISTS `opc_blog_posts`;

CREATE TABLE `opc_blog_posts` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'Unique ID of article',
  `author` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'Admin',
  `content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `date` datetime DEFAULT NULL,
  `title` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `nb_comments` int(10) DEFAULT '0',
  `img_key` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `img_ext` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=63 DEFAULT CHARSET=utf8mb4;

/*Data for the table `opc_blog_posts` */

insert  into `opc_blog_posts`(`id`,`author`,`content`,`date`,`title`,`nb_comments`,`img_key`,`img_ext`) values 
(50,'admin','&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur id nisi risus. Fusce aliquam lacinia metus quis tristique. Aliquam egestas vulputate vestibulum. Praesent pellentesque ex libero, placerat aliquam sem mattis non. Nulla felis diam, facilisis id posuere vel, tincidunt sed velit. Quisque vel velit id neque sagittis bibendum. Sed porta tempus ultrices. Praesent aliquam vulputate pharetra. Etiam et est quis ex sagittis ornare.&lt;/p&gt;\r\n&lt;p&gt;Vestibulum efficitur ornare sapien, ac vestibulum augue mattis eu. Curabitur porttitor sollicitudin magna, sit amet luctus nibh dignissim at. Donec porta, nibh in elementum imperdiet, arcu massa ultrices dui, a convallis est augue vitae diam. Aenean faucibus nunc id orci euismod pellentesque. Fusce odio arcu, finibus et diam quis, tempus imperdiet dolor. Proin enim leo, tristique eu congue sed, fermentum sed diam. Nam posuere dui in rhoncus elementum. Vestibulum aliquam arcu quis elit fringilla, non rhoncus quam laoreet. Sed turpis leo, commodo in placerat a, faucibus eget dui.&lt;/p&gt;\r\n&lt;p&gt;Morbi hendrerit lacus ac vehicula sodales. Curabitur imperdiet commodo lobortis. Proin tempus massa tellus, a porttitor arcu euismod et. Nulla facilisi. Curabitur eu luctus nibh. Cras accumsan dignissim placerat. Maecenas mattis sem in imperdiet mollis. Cras faucibus, odio a ullamcorper pulvinar, leo odio vestibulum magna, at porttitor ante nulla finibus justo. Cras sodales id massa in varius. Quisque erat mi, malesuada vitae mi quis, sollicitudin sagittis tortor. Fusce mattis scelerisque luctus. Sed accumsan massa dictum lorem aliquet pulvinar. Nullam vel molestie nulla. Maecenas lectus lorem, sodales nec velit nec, suscipit euismod quam. Mauris ac magna ac lacus varius ullamcorper. Vestibulum tristique pulvinar dui non viverra.&lt;/p&gt;\r\n&lt;p&gt;Sed accumsan quis nisl ac fringilla. Duis at sagittis nulla. Suspendisse aliquet, magna id porttitor dignissim, sem quam cursus nunc, eu iaculis turpis nisi id quam. Phasellus aliquam ex sit amet massa laoreet, ac placerat orci aliquet. Vivamus gravida in nunc nec vulputate. Vivamus vitae enim nec lacus semper efficitur ac a dolor. Pellentesque tincidunt leo nibh, at maximus odio rhoncus eget. In consequat, libero et hendrerit tincidunt, quam libero elementum ligula, ut ullamcorper lacus neque eu nulla.&lt;/p&gt;\r\n&lt;p&gt;Phasellus eleifend sagittis placerat. Sed sed porta eros. Nulla at pretium turpis, vitae pretium tellus. Nam ac interdum odio, sed dignissim diam. Ut tempus mauris non nibh interdum feugiat. Nulla ac mauris vitae turpis vestibulum ultricies vitae id odio. Nunc mollis lacus sed lectus vulputate laoreet&lt;/p&gt;','2019-05-20 08:19:37','adqsdq',0,'adqsdq','jpeg'),
(51,'admin','Pour la petite histoire\r\nPython est un langage de programmation, dont la première version est sortie en 1991. Créé par Guido van Rossum, il a voyagé du Macintosh de son créateur, qui travaillait à cette époque au Centrum voor Wiskunde en Informatica aux Pays-Bas, jusqu\'à se voir associer une organisation à but non lucratif particulièrement dévouée, la Python Software Foundation, créée en 2001. Ce langage a été baptisé ainsi en hommage à la troupe de comiques les « Monty Python ».\r\n\r\nÀ quoi peut servir Python ?\r\nPython est un langage puissant, à la fois facile à apprendre et riche en possibilités. Dès l\'instant où vous l\'installez sur votre ordinateur, vous disposez de nombreuses fonctionnalités intégrées au langage que nous allons découvrir tout au long de ce livre.\r\n\r\nIl est, en outre, très facile d\'étendre les fonctionnalités existantes, comme nous allons le voir. Ainsi, il existe ce qu\'on appelle des bibliothèques qui aident le développeur à travailler sur des projets particuliers. Plusieurs bibliothèques peuvent ainsi être installées pour, par exemple, développer des interfaces graphiques en Python.\r\n\r\nConcrètement, voilà ce qu\'on peut faire avec Python :\r\n\r\nde petits programmes très simples, appelés scripts, chargés d\'une mission très précise sur votre ordinateur ;\r\n\r\ndes programmes complets, comme des jeux, des suites bureautiques, des logiciels multimédias, des clients de messagerie…\r\n\r\ndes projets très complexes, comme des progiciels (ensemble de plusieurs logiciels pouvant fonctionner ensemble, principalement utilisés dans le monde professionnel).\r\n\r\nVoici quelques-unes des fonctionnalités offertes par Python et ses bibliothèques :\r\n\r\ncréer des interfaces graphiques ;\r\n\r\nfaire circuler des informations au travers d\'un réseau ;\r\n\r\ndialoguer d\'une façon avancée avec votre système d\'exploitation ;\r\n\r\n… et j\'en passe…\r\n\r\nBien entendu, vous n\'allez pas apprendre à faire tout cela en quelques minutes. Mais ce cours vous donnera des bases suffisamment larges pour développer des projets qui pourront devenir, par la suite, assez importants.\r\n\r\nUn langage de programmation interprété\r\nEh oui, vous allez devoir patienter encore un peu car il me reste deux ou trois choses à vous expliquer, et je suis persuadé qu\'il est important de connaître un minimum ces détails qui peuvent sembler peu pratiques de prime abord.\r\nPython est un langage de programmation interprété, c\'est-à-dire que les instructions que vous lui envoyez sont « transcrites » en langage machine au fur et à mesure de leur lecture. D\'autres langages (comme le C / C++) sont appelés « langages compilés » car, avant de pouvoir les exécuter, un logiciel spécialisé se charge de transformer le code du programme en langage machine. On appelle cette étape la « compilation ». À chaque modification du code, il faut rappeler une étape de compilation.\r\n\r\nLes avantages d\'un langage interprété sont la simplicité (on ne passe pas par une étape de compilation avant d\'exécuter son programme) et la portabilité (un langage tel que Python est censé fonctionner aussi bien sous Windows que sous Linux ou Mac OS, et on ne devrait avoir à effectuer aucun changement dans le code pour le passer d\'un système à l\'autre). Cela ne veut pas dire que les langages compilés ne sont pas portables, loin de là ! Mais on doit utiliser des compilateurs différents et, d\'un système à l\'autre, certaines instructions ne sont pas compatibles, voire se comportent différemment.\r\n\r\nEn contrepartie, un langage compilé se révélera bien plus rapide qu\'un langage interprété (la traduction à la volée de votre programme ralentit l\'exécution), bien que cette différence tende à se faire de moins en moins sentir au fil des améliorations. De plus, il faudra installer Python sur le système d\'exploitation que vous utilisez pour que l\'ordinateur puisse comprendre votre code.','2019-05-20 08:19:37','adqsdq',0,'adqsdq','jpeg'),
(52,'admin','Pour la petite histoire\r\nPython est un langage de programmation, dont la première version est sortie en 1991. Créé par Guido van Rossum, il a voyagé du Macintosh de son créateur, qui travaillait à cette époque au Centrum voor Wiskunde en Informatica aux Pays-Bas, jusqu\'à se voir associer une organisation à but non lucratif particulièrement dévouée, la Python Software Foundation, créée en 2001. Ce langage a été baptisé ainsi en hommage à la troupe de comiques les « Monty Python ».\r\n\r\nÀ quoi peut servir Python ?\r\nPython est un langage puissant, à la fois facile à apprendre et riche en possibilités. Dès l\'instant où vous l\'installez sur votre ordinateur, vous disposez de nombreuses fonctionnalités intégrées au langage que nous allons découvrir tout au long de ce livre.\r\n\r\nIl est, en outre, très facile d\'étendre les fonctionnalités existantes, comme nous allons le voir. Ainsi, il existe ce qu\'on appelle des bibliothèques qui aident le développeur à travailler sur des projets particuliers. Plusieurs bibliothèques peuvent ainsi être installées pour, par exemple, développer des interfaces graphiques en Python.\r\n\r\nConcrètement, voilà ce qu\'on peut faire avec Python :\r\n\r\nde petits programmes très simples, appelés scripts, chargés d\'une mission très précise sur votre ordinateur ;\r\n\r\ndes programmes complets, comme des jeux, des suites bureautiques, des logiciels multimédias, des clients de messagerie…\r\n\r\ndes projets très complexes, comme des progiciels (ensemble de plusieurs logiciels pouvant fonctionner ensemble, principalement utilisés dans le monde professionnel).\r\n\r\nVoici quelques-unes des fonctionnalités offertes par Python et ses bibliothèques :\r\n\r\ncréer des interfaces graphiques ;\r\n\r\nfaire circuler des informations au travers d\'un réseau ;\r\n\r\ndialoguer d\'une façon avancée avec votre système d\'exploitation ;\r\n\r\n… et j\'en passe…\r\n\r\nBien entendu, vous n\'allez pas apprendre à faire tout cela en quelques minutes. Mais ce cours vous donnera des bases suffisamment larges pour développer des projets qui pourront devenir, par la suite, assez importants.\r\n\r\nUn langage de programmation interprété\r\nEh oui, vous allez devoir patienter encore un peu car il me reste deux ou trois choses à vous expliquer, et je suis persuadé qu\'il est important de connaître un minimum ces détails qui peuvent sembler peu pratiques de prime abord.\r\nPython est un langage de programmation interprété, c\'est-à-dire que les instructions que vous lui envoyez sont « transcrites » en langage machine au fur et à mesure de leur lecture. D\'autres langages (comme le C / C++) sont appelés « langages compilés » car, avant de pouvoir les exécuter, un logiciel spécialisé se charge de transformer le code du programme en langage machine. On appelle cette étape la « compilation ». À chaque modification du code, il faut rappeler une étape de compilation.\r\n\r\nLes avantages d\'un langage interprété sont la simplicité (on ne passe pas par une étape de compilation avant d\'exécuter son programme) et la portabilité (un langage tel que Python est censé fonctionner aussi bien sous Windows que sous Linux ou Mac OS, et on ne devrait avoir à effectuer aucun changement dans le code pour le passer d\'un système à l\'autre). Cela ne veut pas dire que les langages compilés ne sont pas portables, loin de là ! Mais on doit utiliser des compilateurs différents et, d\'un système à l\'autre, certaines instructions ne sont pas compatibles, voire se comportent différemment.\r\n\r\nEn contrepartie, un langage compilé se révélera bien plus rapide qu\'un langage interprété (la traduction à la volée de votre programme ralentit l\'exécution), bien que cette différence tende à se faire de moins en moins sentir au fil des améliorations. De plus, il faudra installer Python sur le système d\'exploitation que vous utilisez pour que l\'ordinateur puisse comprendre votre code.','2019-05-20 08:19:37','adqsdq',0,'adqsdq','jpeg'),
(53,'admin','Pour la petite histoire\r\nPython est un langage de programmation, dont la première version est sortie en 1991. Créé par Guido van Rossum, il a voyagé du Macintosh de son créateur, qui travaillait à cette époque au Centrum voor Wiskunde en Informatica aux Pays-Bas, jusqu\'à se voir associer une organisation à but non lucratif particulièrement dévouée, la Python Software Foundation, créée en 2001. Ce langage a été baptisé ainsi en hommage à la troupe de comiques les « Monty Python ».\r\n\r\nÀ quoi peut servir Python ?\r\nPython est un langage puissant, à la fois facile à apprendre et riche en possibilités. Dès l\'instant où vous l\'installez sur votre ordinateur, vous disposez de nombreuses fonctionnalités intégrées au langage que nous allons découvrir tout au long de ce livre.\r\n\r\nIl est, en outre, très facile d\'étendre les fonctionnalités existantes, comme nous allons le voir. Ainsi, il existe ce qu\'on appelle des bibliothèques qui aident le développeur à travailler sur des projets particuliers. Plusieurs bibliothèques peuvent ainsi être installées pour, par exemple, développer des interfaces graphiques en Python.\r\n\r\nConcrètement, voilà ce qu\'on peut faire avec Python :\r\n\r\nde petits programmes très simples, appelés scripts, chargés d\'une mission très précise sur votre ordinateur ;\r\n\r\ndes programmes complets, comme des jeux, des suites bureautiques, des logiciels multimédias, des clients de messagerie…\r\n\r\ndes projets très complexes, comme des progiciels (ensemble de plusieurs logiciels pouvant fonctionner ensemble, principalement utilisés dans le monde professionnel).\r\n\r\nVoici quelques-unes des fonctionnalités offertes par Python et ses bibliothèques :\r\n\r\ncréer des interfaces graphiques ;\r\n\r\nfaire circuler des informations au travers d\'un réseau ;\r\n\r\ndialoguer d\'une façon avancée avec votre système d\'exploitation ;\r\n\r\n… et j\'en passe…\r\n\r\nBien entendu, vous n\'allez pas apprendre à faire tout cela en quelques minutes. Mais ce cours vous donnera des bases suffisamment larges pour développer des projets qui pourront devenir, par la suite, assez importants.\r\n\r\nUn langage de programmation interprété\r\nEh oui, vous allez devoir patienter encore un peu car il me reste deux ou trois choses à vous expliquer, et je suis persuadé qu\'il est important de connaître un minimum ces détails qui peuvent sembler peu pratiques de prime abord.\r\nPython est un langage de programmation interprété, c\'est-à-dire que les instructions que vous lui envoyez sont « transcrites » en langage machine au fur et à mesure de leur lecture. D\'autres langages (comme le C / C++) sont appelés « langages compilés » car, avant de pouvoir les exécuter, un logiciel spécialisé se charge de transformer le code du programme en langage machine. On appelle cette étape la « compilation ». À chaque modification du code, il faut rappeler une étape de compilation.\r\n\r\nLes avantages d\'un langage interprété sont la simplicité (on ne passe pas par une étape de compilation avant d\'exécuter son programme) et la portabilité (un langage tel que Python est censé fonctionner aussi bien sous Windows que sous Linux ou Mac OS, et on ne devrait avoir à effectuer aucun changement dans le code pour le passer d\'un système à l\'autre). Cela ne veut pas dire que les langages compilés ne sont pas portables, loin de là ! Mais on doit utiliser des compilateurs différents et, d\'un système à l\'autre, certaines instructions ne sont pas compatibles, voire se comportent différemment.\r\n\r\nEn contrepartie, un langage compilé se révélera bien plus rapide qu\'un langage interprété (la traduction à la volée de votre programme ralentit l\'exécution), bien que cette différence tende à se faire de moins en moins sentir au fil des améliorations. De plus, il faudra installer Python sur le système d\'exploitation que vous utilisez pour que l\'ordinateur puisse comprendre votre code.','2019-05-20 08:19:37','adqsdq',0,'adqsdq','jpeg'),
(54,'admin','Pour la petite histoire\r\nPython est un langage de programmation, dont la première version est sortie en 1991. Créé par Guido van Rossum, il a voyagé du Macintosh de son créateur, qui travaillait à cette époque au Centrum voor Wiskunde en Informatica aux Pays-Bas, jusqu\'à se voir associer une organisation à but non lucratif particulièrement dévouée, la Python Software Foundation, créée en 2001. Ce langage a été baptisé ainsi en hommage à la troupe de comiques les « Monty Python ».\r\n\r\nÀ quoi peut servir Python ?\r\nPython est un langage puissant, à la fois facile à apprendre et riche en possibilités. Dès l\'instant où vous l\'installez sur votre ordinateur, vous disposez de nombreuses fonctionnalités intégrées au langage que nous allons découvrir tout au long de ce livre.\r\n\r\nIl est, en outre, très facile d\'étendre les fonctionnalités existantes, comme nous allons le voir. Ainsi, il existe ce qu\'on appelle des bibliothèques qui aident le développeur à travailler sur des projets particuliers. Plusieurs bibliothèques peuvent ainsi être installées pour, par exemple, développer des interfaces graphiques en Python.\r\n\r\nConcrètement, voilà ce qu\'on peut faire avec Python :\r\n\r\nde petits programmes très simples, appelés scripts, chargés d\'une mission très précise sur votre ordinateur ;\r\n\r\ndes programmes complets, comme des jeux, des suites bureautiques, des logiciels multimédias, des clients de messagerie…\r\n\r\ndes projets très complexes, comme des progiciels (ensemble de plusieurs logiciels pouvant fonctionner ensemble, principalement utilisés dans le monde professionnel).\r\n\r\nVoici quelques-unes des fonctionnalités offertes par Python et ses bibliothèques :\r\n\r\ncréer des interfaces graphiques ;\r\n\r\nfaire circuler des informations au travers d\'un réseau ;\r\n\r\ndialoguer d\'une façon avancée avec votre système d\'exploitation ;\r\n\r\n… et j\'en passe…\r\n\r\nBien entendu, vous n\'allez pas apprendre à faire tout cela en quelques minutes. Mais ce cours vous donnera des bases suffisamment larges pour développer des projets qui pourront devenir, par la suite, assez importants.\r\n\r\nUn langage de programmation interprété\r\nEh oui, vous allez devoir patienter encore un peu car il me reste deux ou trois choses à vous expliquer, et je suis persuadé qu\'il est important de connaître un minimum ces détails qui peuvent sembler peu pratiques de prime abord.\r\nPython est un langage de programmation interprété, c\'est-à-dire que les instructions que vous lui envoyez sont « transcrites » en langage machine au fur et à mesure de leur lecture. D\'autres langages (comme le C / C++) sont appelés « langages compilés » car, avant de pouvoir les exécuter, un logiciel spécialisé se charge de transformer le code du programme en langage machine. On appelle cette étape la « compilation ». À chaque modification du code, il faut rappeler une étape de compilation.\r\n\r\nLes avantages d\'un langage interprété sont la simplicité (on ne passe pas par une étape de compilation avant d\'exécuter son programme) et la portabilité (un langage tel que Python est censé fonctionner aussi bien sous Windows que sous Linux ou Mac OS, et on ne devrait avoir à effectuer aucun changement dans le code pour le passer d\'un système à l\'autre). Cela ne veut pas dire que les langages compilés ne sont pas portables, loin de là ! Mais on doit utiliser des compilateurs différents et, d\'un système à l\'autre, certaines instructions ne sont pas compatibles, voire se comportent différemment.\r\n\r\nEn contrepartie, un langage compilé se révélera bien plus rapide qu\'un langage interprété (la traduction à la volée de votre programme ralentit l\'exécution), bien que cette différence tende à se faire de moins en moins sentir au fil des améliorations. De plus, il faudra installer Python sur le système d\'exploitation que vous utilisez pour que l\'ordinateur puisse comprendre votre code.','2019-05-20 08:19:37','adqsdq',0,'adqsdq','jpeg'),
(55,'admin','Pour la petite histoire\r\nPython est un langage de programmation, dont la première version est sortie en 1991. Créé par Guido van Rossum, il a voyagé du Macintosh de son créateur, qui travaillait à cette époque au Centrum voor Wiskunde en Informatica aux Pays-Bas, jusqu\'à se voir associer une organisation à but non lucratif particulièrement dévouée, la Python Software Foundation, créée en 2001. Ce langage a été baptisé ainsi en hommage à la troupe de comiques les « Monty Python ».\r\n\r\nÀ quoi peut servir Python ?\r\nPython est un langage puissant, à la fois facile à apprendre et riche en possibilités. Dès l\'instant où vous l\'installez sur votre ordinateur, vous disposez de nombreuses fonctionnalités intégrées au langage que nous allons découvrir tout au long de ce livre.\r\n\r\nIl est, en outre, très facile d\'étendre les fonctionnalités existantes, comme nous allons le voir. Ainsi, il existe ce qu\'on appelle des bibliothèques qui aident le développeur à travailler sur des projets particuliers. Plusieurs bibliothèques peuvent ainsi être installées pour, par exemple, développer des interfaces graphiques en Python.\r\n\r\nConcrètement, voilà ce qu\'on peut faire avec Python :\r\n\r\nde petits programmes très simples, appelés scripts, chargés d\'une mission très précise sur votre ordinateur ;\r\n\r\ndes programmes complets, comme des jeux, des suites bureautiques, des logiciels multimédias, des clients de messagerie…\r\n\r\ndes projets très complexes, comme des progiciels (ensemble de plusieurs logiciels pouvant fonctionner ensemble, principalement utilisés dans le monde professionnel).\r\n\r\nVoici quelques-unes des fonctionnalités offertes par Python et ses bibliothèques :\r\n\r\ncréer des interfaces graphiques ;\r\n\r\nfaire circuler des informations au travers d\'un réseau ;\r\n\r\ndialoguer d\'une façon avancée avec votre système d\'exploitation ;\r\n\r\n… et j\'en passe…\r\n\r\nBien entendu, vous n\'allez pas apprendre à faire tout cela en quelques minutes. Mais ce cours vous donnera des bases suffisamment larges pour développer des projets qui pourront devenir, par la suite, assez importants.\r\n\r\nUn langage de programmation interprété\r\nEh oui, vous allez devoir patienter encore un peu car il me reste deux ou trois choses à vous expliquer, et je suis persuadé qu\'il est important de connaître un minimum ces détails qui peuvent sembler peu pratiques de prime abord.\r\nPython est un langage de programmation interprété, c\'est-à-dire que les instructions que vous lui envoyez sont « transcrites » en langage machine au fur et à mesure de leur lecture. D\'autres langages (comme le C / C++) sont appelés « langages compilés » car, avant de pouvoir les exécuter, un logiciel spécialisé se charge de transformer le code du programme en langage machine. On appelle cette étape la « compilation ». À chaque modification du code, il faut rappeler une étape de compilation.\r\n\r\nLes avantages d\'un langage interprété sont la simplicité (on ne passe pas par une étape de compilation avant d\'exécuter son programme) et la portabilité (un langage tel que Python est censé fonctionner aussi bien sous Windows que sous Linux ou Mac OS, et on ne devrait avoir à effectuer aucun changement dans le code pour le passer d\'un système à l\'autre). Cela ne veut pas dire que les langages compilés ne sont pas portables, loin de là ! Mais on doit utiliser des compilateurs différents et, d\'un système à l\'autre, certaines instructions ne sont pas compatibles, voire se comportent différemment.\r\n\r\nEn contrepartie, un langage compilé se révélera bien plus rapide qu\'un langage interprété (la traduction à la volée de votre programme ralentit l\'exécution), bien que cette différence tende à se faire de moins en moins sentir au fil des améliorations. De plus, il faudra installer Python sur le système d\'exploitation que vous utilisez pour que l\'ordinateur puisse comprendre votre code.','2019-05-20 08:19:37','adqsdq',0,'adqsdq','jpeg'),
(56,'admin','Pour la petite histoire\r\nPython est un langage de programmation, dont la première version est sortie en 1991. Créé par Guido van Rossum, il a voyagé du Macintosh de son créateur, qui travaillait à cette époque au Centrum voor Wiskunde en Informatica aux Pays-Bas, jusqu\'à se voir associer une organisation à but non lucratif particulièrement dévouée, la Python Software Foundation, créée en 2001. Ce langage a été baptisé ainsi en hommage à la troupe de comiques les « Monty Python ».\r\n\r\nÀ quoi peut servir Python ?\r\nPython est un langage puissant, à la fois facile à apprendre et riche en possibilités. Dès l\'instant où vous l\'installez sur votre ordinateur, vous disposez de nombreuses fonctionnalités intégrées au langage que nous allons découvrir tout au long de ce livre.\r\n\r\nIl est, en outre, très facile d\'étendre les fonctionnalités existantes, comme nous allons le voir. Ainsi, il existe ce qu\'on appelle des bibliothèques qui aident le développeur à travailler sur des projets particuliers. Plusieurs bibliothèques peuvent ainsi être installées pour, par exemple, développer des interfaces graphiques en Python.\r\n\r\nConcrètement, voilà ce qu\'on peut faire avec Python :\r\n\r\nde petits programmes très simples, appelés scripts, chargés d\'une mission très précise sur votre ordinateur ;\r\n\r\ndes programmes complets, comme des jeux, des suites bureautiques, des logiciels multimédias, des clients de messagerie…\r\n\r\ndes projets très complexes, comme des progiciels (ensemble de plusieurs logiciels pouvant fonctionner ensemble, principalement utilisés dans le monde professionnel).\r\n\r\nVoici quelques-unes des fonctionnalités offertes par Python et ses bibliothèques :\r\n\r\ncréer des interfaces graphiques ;\r\n\r\nfaire circuler des informations au travers d\'un réseau ;\r\n\r\ndialoguer d\'une façon avancée avec votre système d\'exploitation ;\r\n\r\n… et j\'en passe…\r\n\r\nBien entendu, vous n\'allez pas apprendre à faire tout cela en quelques minutes. Mais ce cours vous donnera des bases suffisamment larges pour développer des projets qui pourront devenir, par la suite, assez importants.\r\n\r\nUn langage de programmation interprété\r\nEh oui, vous allez devoir patienter encore un peu car il me reste deux ou trois choses à vous expliquer, et je suis persuadé qu\'il est important de connaître un minimum ces détails qui peuvent sembler peu pratiques de prime abord.\r\nPython est un langage de programmation interprété, c\'est-à-dire que les instructions que vous lui envoyez sont « transcrites » en langage machine au fur et à mesure de leur lecture. D\'autres langages (comme le C / C++) sont appelés « langages compilés » car, avant de pouvoir les exécuter, un logiciel spécialisé se charge de transformer le code du programme en langage machine. On appelle cette étape la « compilation ». À chaque modification du code, il faut rappeler une étape de compilation.\r\n\r\nLes avantages d\'un langage interprété sont la simplicité (on ne passe pas par une étape de compilation avant d\'exécuter son programme) et la portabilité (un langage tel que Python est censé fonctionner aussi bien sous Windows que sous Linux ou Mac OS, et on ne devrait avoir à effectuer aucun changement dans le code pour le passer d\'un système à l\'autre). Cela ne veut pas dire que les langages compilés ne sont pas portables, loin de là ! Mais on doit utiliser des compilateurs différents et, d\'un système à l\'autre, certaines instructions ne sont pas compatibles, voire se comportent différemment.\r\n\r\nEn contrepartie, un langage compilé se révélera bien plus rapide qu\'un langage interprété (la traduction à la volée de votre programme ralentit l\'exécution), bien que cette différence tende à se faire de moins en moins sentir au fil des améliorations. De plus, il faudra installer Python sur le système d\'exploitation que vous utilisez pour que l\'ordinateur puisse comprendre votre code.','2019-05-20 08:19:37','adqsdq',0,'adqsdq','jpeg'),
(61,'admin','Pour la petite histoire\r\nPython est un langage de programmation, dont la première version est sortie en 1991. Créé par Guido van Rossum, il a voyagé du Macintosh de son créateur, qui travaillait à cette époque au Centrum voor Wiskunde en Informatica aux Pays-Bas, jusqu\'à se voir associer une organisation à but non lucratif particulièrement dévouée, la Python Software Foundation, créée en 2001. Ce langage a été baptisé ainsi en hommage à la troupe de comiques les « Monty Python ».\r\n\r\nÀ quoi peut servir Python ?\r\nPython est un langage puissant, à la fois facile à apprendre et riche en possibilités. Dès l\'instant où vous l\'installez sur votre ordinateur, vous disposez de nombreuses fonctionnalités intégrées au langage que nous allons découvrir tout au long de ce livre.\r\n\r\nIl est, en outre, très facile d\'étendre les fonctionnalités existantes, comme nous allons le voir. Ainsi, il existe ce qu\'on appelle des bibliothèques qui aident le développeur à travailler sur des projets particuliers. Plusieurs bibliothèques peuvent ainsi être installées pour, par exemple, développer des interfaces graphiques en Python.\r\n\r\nConcrètement, voilà ce qu\'on peut faire avec Python :\r\n\r\nde petits programmes très simples, appelés scripts, chargés d\'une mission très précise sur votre ordinateur ;\r\n\r\ndes programmes complets, comme des jeux, des suites bureautiques, des logiciels multimédias, des clients de messagerie…\r\n\r\ndes projets très complexes, comme des progiciels (ensemble de plusieurs logiciels pouvant fonctionner ensemble, principalement utilisés dans le monde professionnel).\r\n\r\nVoici quelques-unes des fonctionnalités offertes par Python et ses bibliothèques :\r\n\r\ncréer des interfaces graphiques ;\r\n\r\nfaire circuler des informations au travers d\'un réseau ;\r\n\r\ndialoguer d\'une façon avancée avec votre système d\'exploitation ;\r\n\r\n… et j\'en passe…\r\n\r\nBien entendu, vous n\'allez pas apprendre à faire tout cela en quelques minutes. Mais ce cours vous donnera des bases suffisamment larges pour développer des projets qui pourront devenir, par la suite, assez importants.\r\n\r\nUn langage de programmation interprété\r\nEh oui, vous allez devoir patienter encore un peu car il me reste deux ou trois choses à vous expliquer, et je suis persuadé qu\'il est important de connaître un minimum ces détails qui peuvent sembler peu pratiques de prime abord.\r\nPython est un langage de programmation interprété, c\'est-à-dire que les instructions que vous lui envoyez sont « transcrites » en langage machine au fur et à mesure de leur lecture. D\'autres langages (comme le C / C++) sont appelés « langages compilés » car, avant de pouvoir les exécuter, un logiciel spécialisé se charge de transformer le code du programme en langage machine. On appelle cette étape la « compilation ». À chaque modification du code, il faut rappeler une étape de compilation.\r\n\r\nLes avantages d\'un langage interprété sont la simplicité (on ne passe pas par une étape de compilation avant d\'exécuter son programme) et la portabilité (un langage tel que Python est censé fonctionner aussi bien sous Windows que sous Linux ou Mac OS, et on ne devrait avoir à effectuer aucun changement dans le code pour le passer d\'un système à l\'autre). Cela ne veut pas dire que les langages compilés ne sont pas portables, loin de là ! Mais on doit utiliser des compilateurs différents et, d\'un système à l\'autre, certaines instructions ne sont pas compatibles, voire se comportent différemment.\r\n\r\nEn contrepartie, un langage compilé se révélera bien plus rapide qu\'un langage interprété (la traduction à la volée de votre programme ralentit l\'exécution), bien que cette différence tende à se faire de moins en moins sentir au fil des améliorations. De plus, il faudra installer Python sur le système d\'exploitation que vous utilisez pour que l\'ordinateur puisse comprendre votre code.','2019-05-20 08:33:11','test',27,'test','gif'),
(62,'admin','&amp;lt;h3 id=&quot;r-230595&quot; class=&quot;foldable__button secondTitle js-foldable-button&quot; data-claire-element-id=&quot;2507748&quot;&amp;gt;Pour la petite histoire&amp;lt;/h3&amp;gt; &amp;lt;div class=&quot;foldable__content&quot;&amp;gt; &amp;lt;p id=&quot;r-2230954&quot; class=&quot;hoveredCourseElement&quot; data-claire-element-id=&quot;2507715&quot;&amp;gt;Python est un langage de programmation, dont la première version est sortie en 1991. Créé par &amp;lt;strong&amp;gt;Guido van Rossum&amp;lt;/strong&amp;gt;, il a voyagé du Macintosh de son créateur, qui travaillait à cette époque au &amp;lt;em&amp;gt;Centrum voor Wiskunde en Informatica&amp;lt;/em&amp;gt; aux Pays-Bas, jusqu\'à se voir associer une organisation à but non lucratif particulièrement dévouée, la &amp;lt;strong&amp;gt;Python Software Foundation&amp;lt;/strong&amp;gt;, créée en 2001. Ce langage a été baptisé ainsi en hommage à la troupe de comiques les « Monty Python ».&amp;lt;/p&amp;gt; &amp;lt;h4 id=&quot;r-2230976&quot; class=&quot;&quot; data-claire-element-id=&quot;2507737&quot;&amp;gt;À quoi peut servir Python ?&amp;lt;/h4&amp;gt; &amp;lt;p id=&quot;r-2230955&quot; class=&quot;&quot; data-claire-element-id=&quot;2507716&quot;&amp;gt;Python est un langage puissant, à la fois facile à apprendre et riche en possibilités. Dès l\'instant où vous l\'installez sur votre ordinateur, vous disposez de nombreuses fonctionnalités intégrées au langage que nous allons découvrir tout au long de ce livre.&amp;lt;/p&amp;gt; &amp;lt;p id=&quot;r-2230956&quot; class=&quot;&quot; data-claire-element-id=&quot;2507717&quot;&amp;gt;Il est, en outre, très facile d\'étendre les fonctionnalités existantes, comme nous allons le voir. Ainsi, il existe ce qu\'on appelle des &amp;lt;strong&amp;gt;bibliothèques&amp;lt;/strong&amp;gt; qui aident le développeur à travailler sur des projets particuliers. Plusieurs bibliothèques peuvent ainsi être installées pour, par exemple, développer des interfaces graphiques en Python.&amp;lt;/p&amp;gt; &amp;lt;p id=&quot;r-2230957&quot; class=&quot;&quot; data-claire-element-id=&quot;2507718&quot;&amp;gt;Concrètement, voilà ce qu\'on peut faire avec Python :&amp;lt;/p&amp;gt; &amp;lt;ul id=&quot;r-2230964&quot; class=&quot;&quot; data-claire-element-id=&quot;2507725&quot;&amp;gt; &amp;lt;li id=&quot;r-2230959&quot; data-claire-element-id=&quot;2507720&quot;&amp;gt; &amp;lt;p id=&quot;r-2230958&quot; data-claire-element-id=&quot;2507719&quot;&amp;gt;de petits programmes très simples, appelés &amp;lt;strong&amp;gt;scripts&amp;lt;/strong&amp;gt;, chargés d\'une mission très précise sur votre ordinateur ;&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;li id=&quot;r-2230961&quot; data-claire-element-id=&quot;2507722&quot;&amp;gt; &amp;lt;p id=&quot;r-2230960&quot; data-claire-element-id=&quot;2507721&quot;&amp;gt;des programmes complets, comme des jeux, des suites bureautiques, des logiciels multimédias, des clients de messagerie…&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;li id=&quot;r-2230963&quot; data-claire-element-id=&quot;2507724&quot;&amp;gt; &amp;lt;p id=&quot;r-2230962&quot; data-claire-element-id=&quot;2507723&quot;&amp;gt;des projets très complexes, comme des progiciels (ensemble de plusieurs logiciels pouvant fonctionner ensemble, principalement utilisés dans le monde professionnel).&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;p id=&quot;r-2230965&quot; class=&quot;&quot; data-claire-element-id=&quot;2507726&quot;&amp;gt;Voici quelques-unes des fonctionnalités offertes par Python et ses bibliothèques :&amp;lt;/p&amp;gt; &amp;lt;ul id=&quot;r-2230974&quot; class=&quot;&quot; data-claire-element-id=&quot;2507735&quot;&amp;gt; &amp;lt;li id=&quot;r-2230967&quot; data-claire-element-id=&quot;2507728&quot;&amp;gt; &amp;lt;p id=&quot;r-2230966&quot; data-claire-element-id=&quot;2507727&quot;&amp;gt;créer des interfaces graphiques ;&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;li id=&quot;r-2230969&quot; data-claire-element-id=&quot;2507730&quot;&amp;gt; &amp;lt;p id=&quot;r-2230968&quot; data-claire-element-id=&quot;2507729&quot;&amp;gt;faire circuler des informations au travers d\'un réseau ;&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;li id=&quot;r-2230971&quot; data-claire-element-id=&quot;2507732&quot;&amp;gt; &amp;lt;p id=&quot;r-2230970&quot; data-claire-element-id=&quot;2507731&quot;&amp;gt;dialoguer d\'une façon avancée avec votre système d\'exploitation ;&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;li id=&quot;r-2230973&quot; data-claire-element-id=&quot;2507734&quot;&amp;gt; &amp;lt;p id=&quot;r-2230972&quot; data-claire-element-id=&quot;2507733&quot;&amp;gt;… et j\'en passe…&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;p id=&quot;r-2230975&quot; class=&quot;&quot; data-claire-element-id=&quot;2507736&quot;&amp;gt;Bien entendu, vous n\'allez pas apprendre à faire tout cela en quelques minutes. Mais ce cours vous donnera des bases suffisamment larges pour développer des projets qui pourront devenir, par la suite, assez importants.&amp;lt;/p&amp;gt; &amp;lt;h4 id=&quot;r-2230980&quot; class=&quot;&quot; data-claire-element-id=&quot;2507741&quot;&amp;gt;Un langage de programmation interprété&amp;lt;/h4&amp;gt; &amp;lt;p id=&quot;r-2230977&quot; class=&quot;&quot; data-claire-element-id=&quot;2507738&quot;&amp;gt;Eh oui, vous allez devoir patienter encore un peu car il me reste deux ou trois choses à vous expliquer, et je suis persuadé qu\'il est important de connaître un minimum ces détails qui peuvent sembler peu pratiques de prime abord.&amp;lt;br /&amp;gt;Python est un langage de programmation &amp;lt;strong&amp;gt;interprété&amp;lt;/strong&amp;gt;, c\'est-à-dire que les instructions que vous lui envoyez sont « transcrites » en langage machine au fur et à mesure de leur lecture. D\'autres langages (comme le C / C++) sont appelés « langages &amp;lt;strong&amp;gt;compilés&amp;lt;/strong&amp;gt; » car, avant de pouvoir les exécuter, un logiciel spécialisé se charge de transformer le code du programme en langage machine. On appelle cette étape la « &amp;lt;strong&amp;gt;compilation&amp;lt;/strong&amp;gt; ». À chaque modification du code, il faut rappeler une étape de compilation.&amp;lt;/p&amp;gt; &amp;lt;p id=&quot;r-2230978&quot; class=&quot;&quot; data-claire-element-id=&quot;2507739&quot;&amp;gt;Les avantages d\'un langage interprété sont la simplicité (on ne passe pas par une étape de compilation avant d\'exécuter son programme) et la portabilité (un langage tel que Python est censé fonctionner aussi bien sous Windows que sous Linux ou Mac OS, et on ne devrait avoir à effectuer aucun changement dans le code pour le passer d\'un système à l\'autre). Cela ne veut pas dire que les langages compilés ne sont pas portables, loin de là ! Mais on doit utiliser des compilateurs différents et, d\'un système à l\'autre, certaines instructions ne sont pas compatibles, voire se comportent différemment.&amp;lt;/p&amp;gt; &amp;lt;p id=&quot;r-2230979&quot; class=&quot;&quot; data-claire-element-id=&quot;2507740&quot;&amp;gt;En contrepartie, un langage compilé se révélera bien plus rapide qu\'un langage interprété (la traduction à la volée de votre programme ralentit l\'exécution), bien que cette différence tende à se faire de moins en moins sentir au fil des améliorations. De plus, il faudra installer Python sur le système d\'exploitation que vous utilisez pour que l\'ordinateur puisse comprendre votre code.&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt;','2019-05-20 08:54:36','Python quel langage ! (TEST)',0,'Pythonquellangage!','jpg');

/*Table structure for table `opc_blog_users` */

DROP TABLE IF EXISTS `opc_blog_users`;

CREATE TABLE `opc_blog_users` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `hash_pwd` char(60) NOT NULL,
  `last_connexion` datetime DEFAULT NULL,
  `rank` int(10) DEFAULT '0' COMMENT 'User rank',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;

/*Data for the table `opc_blog_users` */

insert  into `opc_blog_users`(`id`,`name`,`hash_pwd`,`last_connexion`,`rank`) values 
(1,'admin','$2y$10$MbnZ9.C2IZLwMLwOfVvYxuG/yBvYNFXzUMYbo.yLjZfSLSOoXCvfu','2019-05-21 05:46:26',3);

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
